.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SSL_get_ex_new_index 3"
.TH SSL_get_ex_new_index 3 2016-05-03 1.0.2h OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SSL_get_ex_new_index, SSL_set_ex_data, SSL_get_ex_data \- internal application specific data functions
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/ssl.h>
\&
\& int SSL_get_ex_new_index(long argl, void *argp,
\&                CRYPTO_EX_new *new_func,
\&                CRYPTO_EX_dup *dup_func,
\&                CRYPTO_EX_free *free_func);
\&
\& int SSL_set_ex_data(SSL *ssl, int idx, void *arg);
\&
\& void *SSL_get_ex_data(const SSL *ssl, int idx);
\&
\& typedef int new_func(void *parent, void *ptr, CRYPTO_EX_DATA *ad,
\&                int idx, long argl, void *argp);
\& typedef void free_func(void *parent, void *ptr, CRYPTO_EX_DATA *ad,
\&                int idx, long argl, void *argp);
\& typedef int dup_func(CRYPTO_EX_DATA *to, CRYPTO_EX_DATA *from, void *from_d,
\&                int idx, long argl, void *argp);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Several OpenSSL structures can have application specific data attached to them.
These functions are used internally by OpenSSL to manipulate application
specific data attached to a specific structure.
.PP
\&\fBSSL_get_ex_new_index()\fR is used to register a new index for application
specific data.
.PP
\&\fBSSL_set_ex_data()\fR is used to store application data at \fBarg\fR for \fBidx\fR into
the \fBssl\fR object.
.PP
\&\fBSSL_get_ex_data()\fR is used to retrieve the information for \fBidx\fR from
\&\fBssl\fR.
.PP
A detailed description for the \fB*_get_ex_new_index()\fR functionality
can be found in \fBRSA_get_ex_new_index\fR\|(3).
The \fB*_get_ex_data()\fR and \fB*_set_ex_data()\fR functionality is described in
\&\fBCRYPTO_set_ex_data\fR\|(3).
.SH EXAMPLES
.IX Header "EXAMPLES"
An example on how to use the functionality is included in the example
\&\fBverify_callback()\fR in \fBSSL_CTX_set_verify\fR\|(3).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBssl\fR\|(3),
\&\fBRSA_get_ex_new_index\fR\|(3),
\&\fBCRYPTO_set_ex_data\fR\|(3),
\&\fBSSL_CTX_set_verify\fR\|(3)
