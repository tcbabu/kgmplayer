.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SSL_CTX_use_serverinfo 3"
.TH SSL_CTX_use_serverinfo 3 2016-05-03 1.0.2h OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SSL_CTX_use_serverinfo, SSL_CTX_use_serverinfo_file \- use serverinfo extension
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/ssl.h>
\&
\& int SSL_CTX_use_serverinfo(SSL_CTX *ctx, const unsigned char *serverinfo,
\&                            size_t serverinfo_length);
\&
\& int SSL_CTX_use_serverinfo_file(SSL_CTX *ctx, const char *file);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
These functions load "serverinfo" TLS ServerHello Extensions into the SSL_CTX.
A "serverinfo" extension is returned in response to an empty ClientHello
Extension.
.PP
\&\fBSSL_CTX_use_serverinfo()\fR loads one or more serverinfo extensions from
a byte array into \fBctx\fR.  The extensions must be concatenated into a 
sequence of bytes.  Each extension must consist of a 2\-byte Extension Type, 
a 2\-byte length, and then length bytes of extension_data.
.PP
\&\fBSSL_CTX_use_serverinfo_file()\fR loads one or more serverinfo extensions from
\&\fBfile\fR into \fBctx\fR.  The extensions must be in PEM format.  Each extension
must consist of a 2\-byte Extension Type, a 2\-byte length, and then length
bytes of extension_data.  Each PEM extension name must begin with the phrase
"BEGIN SERVERINFO FOR ".
.PP
If more than one certificate (RSA/DSA) is installed using
\&\fBSSL_CTX_use_certificate()\fR, the serverinfo extension will be loaded into the
last certificate installed.  If e.g. the last item was a RSA certificate, the
loaded serverinfo extension data will be loaded for that certificate.  To
use the serverinfo extension for multiple certificates,
\&\fBSSL_CTX_use_serverinfo()\fR needs to be called multiple times, once \fBafter\fR
each time a certificate is loaded.
.SH NOTES
.IX Header "NOTES"
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
On success, the functions return 1.
On failure, the functions return 0.  Check out the error stack to find out
the reason.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SH HISTORY
.IX Header "HISTORY"
