.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "d2i_RSAPublicKey 3"
.TH d2i_RSAPublicKey 3 2016-05-03 1.0.2h OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
d2i_RSAPublicKey, i2d_RSAPublicKey, d2i_RSAPrivateKey, i2d_RSAPrivateKey,
d2i_RSA_PUBKEY, i2d_RSA_PUBKEY, i2d_Netscape_RSA,
d2i_Netscape_RSA \- RSA public and private key encoding functions.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\& #include <openssl/rsa.h>
\& #include <openssl/x509.h>
\&
\& RSA * d2i_RSAPublicKey(RSA **a, const unsigned char **pp, long length);
\&
\& int i2d_RSAPublicKey(RSA *a, unsigned char **pp);
\&
\& RSA * d2i_RSA_PUBKEY(RSA **a, const unsigned char **pp, long length);
\&
\& int i2d_RSA_PUBKEY(RSA *a, unsigned char **pp);
\&
\& RSA * d2i_RSAPrivateKey(RSA **a, const unsigned char **pp, long length);
\&
\& int i2d_RSAPrivateKey(RSA *a, unsigned char **pp);
\&
\& int i2d_Netscape_RSA(RSA *a, unsigned char **pp, int (*cb)());
\&
\& RSA * d2i_Netscape_RSA(RSA **a, const unsigned char **pp, long length, int (*cb)());
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBd2i_RSAPublicKey()\fR and \fBi2d_RSAPublicKey()\fR decode and encode a PKCS#1 RSAPublicKey
structure.
.PP
\&\fBd2i_RSA_PUBKEY()\fR and \fBi2d_RSA_PUBKEY()\fR decode and encode an RSA public key using
a SubjectPublicKeyInfo (certificate public key) structure.
.PP
\&\fBd2i_RSAPrivateKey()\fR, \fBi2d_RSAPrivateKey()\fR decode and encode a PKCS#1 RSAPrivateKey
structure.
.PP
\&\fBd2i_Netscape_RSA()\fR, \fBi2d_Netscape_RSA()\fR decode and encode an RSA private key in
NET format.
.PP
The usage of all of these functions is similar to the \fBd2i_X509()\fR and
\&\fBi2d_X509()\fR described in the \fBd2i_X509\fR\|(3) manual page.
.SH NOTES
.IX Header "NOTES"
The \fBRSA\fR structure passed to the private key encoding functions should have
all the PKCS#1 private key components present.
.PP
The data encoded by the private key functions is unencrypted and therefore 
offers no private key security.
.PP
The NET format functions are present to provide compatibility with certain very
old software. This format has some severe security weaknesses and should be
avoided if possible.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBd2i_X509\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
TBA
