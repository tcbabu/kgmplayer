.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DSA_sign 3"
.TH DSA_sign 3 2016-05-03 1.0.2h OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DSA_sign, DSA_sign_setup, DSA_verify \- DSA signatures
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/dsa.h>
\&
\& int    DSA_sign(int type, const unsigned char *dgst, int len,
\&                unsigned char *sigret, unsigned int *siglen, DSA *dsa);
\&
\& int    DSA_sign_setup(DSA *dsa, BN_CTX *ctx, BIGNUM **kinvp,
\&                BIGNUM **rp);
\&
\& int    DSA_verify(int type, const unsigned char *dgst, int len,
\&                unsigned char *sigbuf, int siglen, DSA *dsa);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBDSA_sign()\fR computes a digital signature on the \fBlen\fR byte message
digest \fBdgst\fR using the private key \fBdsa\fR and places its ASN.1 DER
encoding at \fBsigret\fR. The length of the signature is places in
*\fBsiglen\fR. \fBsigret\fR must point to DSA_size(\fBdsa\fR) bytes of memory.
.PP
\&\fBDSA_sign_setup()\fR may be used to precompute part of the signing
operation in case signature generation is time-critical. It expects
\&\fBdsa\fR to contain DSA parameters. It places the precomputed values
in newly allocated \fBBIGNUM\fRs at *\fBkinvp\fR and *\fBrp\fR, after freeing
the old ones unless *\fBkinvp\fR and *\fBrp\fR are NULL. These values may
be passed to \fBDSA_sign()\fR in \fBdsa\->kinv\fR and \fBdsa\->r\fR.
\&\fBctx\fR is a pre-allocated \fBBN_CTX\fR or NULL.
.PP
\&\fBDSA_verify()\fR verifies that the signature \fBsigbuf\fR of size \fBsiglen\fR
matches a given message digest \fBdgst\fR of size \fBlen\fR.
\&\fBdsa\fR is the signer's public key.
.PP
The \fBtype\fR parameter is ignored.
.PP
The PRNG must be seeded before \fBDSA_sign()\fR (or \fBDSA_sign_setup()\fR)
is called.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBDSA_sign()\fR and \fBDSA_sign_setup()\fR return 1 on success, 0 on error.
\&\fBDSA_verify()\fR returns 1 for a valid signature, 0 for an incorrect
signature and \-1 on error. The error codes can be obtained by
\&\fBERR_get_error\fR\|(3).
.SH "CONFORMING TO"
.IX Header "CONFORMING TO"
US Federal Information Processing Standard FIPS 186 (Digital Signature
Standard, DSS), ANSI X9.30
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdsa\fR\|(3), \fBERR_get_error\fR\|(3), \fBrand\fR\|(3),
\&\fBDSA_do_sign\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
\&\fBDSA_sign()\fR and \fBDSA_verify()\fR are available in all versions of SSLeay.
\&\fBDSA_sign_setup()\fR was added in SSLeay 0.8.
